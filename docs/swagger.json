{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Electronic notifications",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:80",
    "basePath": "/",
    "paths": {
        "/api/notifications": {
            "get": {
                "description": "Возвращает все уведомления с фильтрацией по статусу и дате формирования",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Получить все уведомления",
                "parameters": [
                    {
                        "type": "string",
                        "description": "статус уведомления",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "начальная дата формирования",
                        "name": "formation_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "конечная дата формирвания",
                        "name": "formation_date_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AllNotificationsResponse"
                        }
                    }
                }
            }
        },
        "/api/notifications/user_confirm": {
            "put": {
                "description": "Сформировать или удалить уведомление пользователем",
                "tags": [
                    "Уведомления"
                ],
                "summary": "Сформировать уведомление",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/notifications/{notification_id}": {
            "get": {
                "description": "Возвращает подробную информацию об уведомлении и его типе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Получить одно уведомление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id уведомления",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.NotificationResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Позволяет изменить тип уведомления и возвращает обновлённые данные",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Указать тип уведомления",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id уведомления",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Тип уведомления",
                        "name": "notification_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.SwaggerUpdateNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.UpdateNotificationResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет уведомление по id",
                "tags": [
                    "Уведомления"
                ],
                "summary": "Удалить уведомление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id уведомления",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/notifications/{notification_id}/delete_recipient/{recipient_id}": {
            "delete": {
                "description": "Удалить получателя из уведомления",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Уведомления"
                ],
                "summary": "Удалить получателя из уведомления",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id уведомления",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id получателя",
                        "name": "recipient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AllRecipientsResponse"
                        }
                    }
                }
            }
        },
        "/api/notifications/{notification_id}/moderator_confirm": {
            "put": {
                "description": "Подтвердить или отменить уведомление модератором",
                "tags": [
                    "Уведомления"
                ],
                "summary": "Подтвердить уведомление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id уведомления",
                        "name": "notification_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "подтвердить",
                        "name": "confirm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/recipients": {
            "get": {
                "description": "Возвращает всех доуступных получателей с опциональной фильтрацией по ФИО",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получатели"
                ],
                "summary": "Получить всех получателей",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ФИО для фильтрации",
                        "name": "fio",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.GetAllRecipientsResponse"
                        }
                    }
                }
            }
        },
        "/api/recipients/": {
            "post": {
                "description": "Добавить нового получателя",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Получатели"
                ],
                "summary": "Добавить получателя",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Изображение получателя",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "ФИО",
                        "name": "fio",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Почта",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Возраст",
                        "name": "age",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Адрес",
                        "name": "adress",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/recipients/{recipient_id}": {
            "get": {
                "description": "Возвращает более подробную информацию об одном получателе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получатели"
                ],
                "summary": "Получить одного получателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id получателя",
                        "name": "recipient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ds.Recipient"
                        }
                    }
                }
            },
            "put": {
                "description": "Изменить данные полей о получателе",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получатели"
                ],
                "summary": "Изменить получателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Идентификатор получателя",
                        "name": "recipient_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ФИО",
                        "name": "fio",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Почта",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Возраст",
                        "name": "age",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Изображение получателя",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Адрес",
                        "name": "adress",
                        "in": "formData"
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Удаляет получателя по id",
                "tags": [
                    "Получатели"
                ],
                "summary": "Удалить получателя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id получателя",
                        "name": "recipient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/recipients/{recipient_id}/add_to_notification": {
            "post": {
                "description": "Добавить выбранного получателя в черновик уведомления",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Получатели"
                ],
                "summary": "Добавить в уведомление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id получателя",
                        "name": "recipient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.AddToNotificationResp"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Авторизует пользователя по логиню, паролю и отдаёт jwt токен для дальнейших запросов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Авторизация",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "user_credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SwaggerLoginResp"
                        }
                    }
                }
            }
        },
        "/api/user/loguot": {
            "post": {
                "description": "Выход из аккаунта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Выйти из аккаунта",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/sign_up": {
            "post": {
                "description": "Регистрация нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Регистрация",
                "parameters": [
                    {
                        "description": "login and password",
                        "name": "user_credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.RegisterResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.SwaggerUpdateNotificationRequest": {
            "type": "object",
            "properties": {
                "notification_type": {
                    "type": "string"
                }
            }
        },
        "ds.Recipient": {
            "type": "object",
            "required": [
                "adress",
                "age",
                "email",
                "fio"
            ],
            "properties": {
                "adress": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fio": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.AddToNotificationResp": {
            "type": "object",
            "properties": {
                "recipient_count": {
                    "type": "integer"
                }
            }
        },
        "schemes.AllNotificationsResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemes.NotificationOutput"
                    }
                }
            }
        },
        "schemes.AllRecipientsResponse": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.Recipient"
                    }
                }
            }
        },
        "schemes.GetAllRecipientsResponse": {
            "type": "object",
            "properties": {
                "draft_notification": {
                    "$ref": "#/definitions/schemes.NotificationShort"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.Recipient"
                    }
                }
            }
        },
        "schemes.LoginReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 30
                },
                "password": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "schemes.NotificationOutput": {
            "type": "object",
            "properties": {
                "completion_date": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "formation_date": {
                    "type": "string"
                },
                "moderator": {
                    "type": "string"
                },
                "notification_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.NotificationResponse": {
            "type": "object",
            "properties": {
                "notification": {
                    "$ref": "#/definitions/schemes.NotificationOutput"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ds.Recipient"
                    }
                }
            }
        },
        "schemes.NotificationShort": {
            "type": "object",
            "properties": {
                "recipient_count": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "schemes.RegisterReq": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 30
                },
                "password": {
                    "type": "string",
                    "maxLength": 30
                }
            }
        },
        "schemes.RegisterResp": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "schemes.SwaggerLoginResp": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "schemes.UpdateNotificationResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "$ref": "#/definitions/schemes.NotificationOutput"
                }
            }
        }
    }
}